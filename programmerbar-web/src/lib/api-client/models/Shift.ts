/* tslint:disable */
/* eslint-disable */
/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventUser } from './EventUser';
import {
	EventUserFromJSON,
	EventUserFromJSONTyped,
	EventUserToJSON,
	EventUserToJSONTyped
} from './EventUser';

/**
 *
 * @export
 * @interface Shift
 */
export interface Shift {
	/**
	 * End time of the shift
	 * @type {Date}
	 * @memberof Shift
	 */
	endAt: Date;
	/**
	 * Unique identifier for the shift
	 * @type {string}
	 * @memberof Shift
	 */
	id: string;
	/**
	 * Start time of the shift
	 * @type {Date}
	 * @memberof Shift
	 */
	startAt: Date;
	/**
	 * List of users assigned to this shift
	 * @type {Array<EventUser>}
	 * @memberof Shift
	 */
	users: Array<EventUser>;
}

/**
 * Check if a given object implements the Shift interface.
 */
export function instanceOfShift(value: object): value is Shift {
	if (!('endAt' in value) || value['endAt'] === undefined) return false;
	if (!('id' in value) || value['id'] === undefined) return false;
	if (!('startAt' in value) || value['startAt'] === undefined) return false;
	if (!('users' in value) || value['users'] === undefined) return false;
	return true;
}

export function ShiftFromJSON(json: any): Shift {
	return ShiftFromJSONTyped(json, false);
}

export function ShiftFromJSONTyped(json: any, ignoreDiscriminator: boolean): Shift {
	if (json == null) {
		return json;
	}
	return {
		endAt: new Date(json['end_at']),
		id: json['id'],
		startAt: new Date(json['start_at']),
		users: (json['users'] as Array<any>).map(EventUserFromJSON)
	};
}

export function ShiftToJSON(json: any): Shift {
	return ShiftToJSONTyped(json, false);
}

export function ShiftToJSONTyped(value?: Shift | null, ignoreDiscriminator: boolean = false): any {
	if (value == null) {
		return value;
	}

	return {
		end_at: value['endAt'].toISOString(),
		id: value['id'],
		start_at: value['startAt'].toISOString(),
		users: (value['users'] as Array<any>).map(EventUserToJSON)
	};
}
