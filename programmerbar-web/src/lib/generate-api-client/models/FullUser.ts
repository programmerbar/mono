/* tslint:disable */
/* eslint-disable */
/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface FullUser
 */
export interface FullUser {
	/**
	 * Number of extra beers the user can claim
	 * @type {number}
	 * @memberof FullUser
	 */
	additionalBeers: number;
	/**
	 * Optional alternative email address for the user
	 * @type {string}
	 * @memberof FullUser
	 */
	altEmail?: string | null;
	/**
	 * Email address of the user
	 * @type {string}
	 * @memberof FullUser
	 */
	email: string;
	/**
	 * Optional Feide ID for the user
	 * @type {string}
	 * @memberof FullUser
	 */
	feideId?: string | null;
	/**
	 * Unique identifier for the user
	 * @type {string}
	 * @memberof FullUser
	 */
	id: string;
	/**
	 * Name of the user
	 * @type {string}
	 * @memberof FullUser
	 */
	name: string;
	/**
	 * Role of the user in the system
	 * @type {string}
	 * @memberof FullUser
	 */
	role: string;
}

/**
 * Check if a given object implements the FullUser interface.
 */
export function instanceOfFullUser(value: object): value is FullUser {
	if (!('additionalBeers' in value) || value['additionalBeers'] === undefined) return false;
	if (!('email' in value) || value['email'] === undefined) return false;
	if (!('id' in value) || value['id'] === undefined) return false;
	if (!('name' in value) || value['name'] === undefined) return false;
	if (!('role' in value) || value['role'] === undefined) return false;
	return true;
}

export function FullUserFromJSON(json: any): FullUser {
	return FullUserFromJSONTyped(json, false);
}

export function FullUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): FullUser {
	if (json == null) {
		return json;
	}
	return {
		additionalBeers: json['additional_beers'],
		altEmail: json['alt_email'] == null ? undefined : json['alt_email'],
		email: json['email'],
		feideId: json['feide_id'] == null ? undefined : json['feide_id'],
		id: json['id'],
		name: json['name'],
		role: json['role']
	};
}

export function FullUserToJSON(json: any): FullUser {
	return FullUserToJSONTyped(json, false);
}

export function FullUserToJSONTyped(
	value?: FullUser | null,
	ignoreDiscriminator: boolean = false
): any {
	if (value == null) {
		return value;
	}

	return {
		additional_beers: value['additionalBeers'],
		alt_email: value['altEmail'],
		email: value['email'],
		feide_id: value['feideId'],
		id: value['id'],
		name: value['name'],
		role: value['role']
	};
}
