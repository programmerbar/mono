/* tslint:disable */
/* eslint-disable */
/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NewShiftInput } from './NewShiftInput';
import {
	NewShiftInputFromJSON,
	NewShiftInputFromJSONTyped,
	NewShiftInputToJSON,
	NewShiftInputToJSONTyped
} from './NewShiftInput';

/**
 *
 * @export
 * @interface NewEventWithShiftsInput
 */
export interface NewEventWithShiftsInput {
	/**
	 * Date and time of the event
	 * @type {Date}
	 * @memberof NewEventWithShiftsInput
	 */
	date: Date;
	/**
	 * Name of the event
	 * @type {string}
	 * @memberof NewEventWithShiftsInput
	 */
	name: string;
	/**
	 * List of shifts to be created for the event
	 * @type {Array<NewShiftInput>}
	 * @memberof NewEventWithShiftsInput
	 */
	shifts: Array<NewShiftInput>;
}

/**
 * Check if a given object implements the NewEventWithShiftsInput interface.
 */
export function instanceOfNewEventWithShiftsInput(value: object): value is NewEventWithShiftsInput {
	if (!('date' in value) || value['date'] === undefined) return false;
	if (!('name' in value) || value['name'] === undefined) return false;
	if (!('shifts' in value) || value['shifts'] === undefined) return false;
	return true;
}

export function NewEventWithShiftsInputFromJSON(json: any): NewEventWithShiftsInput {
	return NewEventWithShiftsInputFromJSONTyped(json, false);
}

export function NewEventWithShiftsInputFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean
): NewEventWithShiftsInput {
	if (json == null) {
		return json;
	}
	return {
		date: new Date(json['date']),
		name: json['name'],
		shifts: (json['shifts'] as Array<any>).map(NewShiftInputFromJSON)
	};
}

export function NewEventWithShiftsInputToJSON(json: any): NewEventWithShiftsInput {
	return NewEventWithShiftsInputToJSONTyped(json, false);
}

export function NewEventWithShiftsInputToJSONTyped(
	value?: NewEventWithShiftsInput | null,
	ignoreDiscriminator: boolean = false
): any {
	if (value == null) {
		return value;
	}

	return {
		date: value['date'].toISOString(),
		name: value['name'],
		shifts: (value['shifts'] as Array<any>).map(NewShiftInputToJSON)
	};
}
