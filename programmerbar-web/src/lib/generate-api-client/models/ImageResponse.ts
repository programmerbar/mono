/* tslint:disable */
/* eslint-disable */
/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ImageResponse
 */
export interface ImageResponse {
	/**
	 * Content type of the image
	 * @type {string}
	 * @memberof ImageResponse
	 */
	contentType: string;
	/**
	 * File name of the image
	 * @type {string}
	 * @memberof ImageResponse
	 */
	fileName: string;
	/**
	 * Unique identifier for the image
	 * @type {string}
	 * @memberof ImageResponse
	 */
	id: string;
	/**
	 * Size of the image in bytes
	 * @type {number}
	 * @memberof ImageResponse
	 */
	size: number;
}

/**
 * Check if a given object implements the ImageResponse interface.
 */
export function instanceOfImageResponse(value: object): value is ImageResponse {
	if (!('contentType' in value) || value['contentType'] === undefined) return false;
	if (!('fileName' in value) || value['fileName'] === undefined) return false;
	if (!('id' in value) || value['id'] === undefined) return false;
	if (!('size' in value) || value['size'] === undefined) return false;
	return true;
}

export function ImageResponseFromJSON(json: any): ImageResponse {
	return ImageResponseFromJSONTyped(json, false);
}

export function ImageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageResponse {
	if (json == null) {
		return json;
	}
	return {
		contentType: json['content_type'],
		fileName: json['file_name'],
		id: json['id'],
		size: json['size']
	};
}

export function ImageResponseToJSON(json: any): ImageResponse {
	return ImageResponseToJSONTyped(json, false);
}

export function ImageResponseToJSONTyped(
	value?: ImageResponse | null,
	ignoreDiscriminator: boolean = false
): any {
	if (value == null) {
		return value;
	}

	return {
		content_type: value['contentType'],
		file_name: value['fileName'],
		id: value['id'],
		size: value['size']
	};
}
