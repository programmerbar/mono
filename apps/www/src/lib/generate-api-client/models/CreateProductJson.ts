/* tslint:disable */
/* eslint-disable */
/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CreateProductJson
 */
export interface CreateProductJson {
	/**
	 * Alcohol content of the product, if applicable
	 * @type {number}
	 * @memberof CreateProductJson
	 */
	alcoholContent?: number | null;
	/**
	 * Credits needed to claim the product internally
	 * @type {number}
	 * @memberof CreateProductJson
	 */
	credits?: number | null;
	/**
	 * Description of the product
	 * @type {string}
	 * @memberof CreateProductJson
	 */
	description?: string | null;
	/**
	 * Image ID associated with the product, if any
	 * @type {string}
	 * @memberof CreateProductJson
	 */
	imageId?: string | null;
	/**
	 * Internal price for the product
	 * @type {number}
	 * @memberof CreateProductJson
	 */
	internalPrice: number;
	/**
	 * Indicates if the product is sold out
	 * @type {boolean}
	 * @memberof CreateProductJson
	 */
	isSoldOut: boolean;
	/**
	 * Name of the product
	 * @type {string}
	 * @memberof CreateProductJson
	 */
	name: string;
	/**
	 * Price for ordinary customers
	 * @type {number}
	 * @memberof CreateProductJson
	 */
	ordinaryPrice: number;
	/**
	 * ID of the producer, if applicable
	 * @type {string}
	 * @memberof CreateProductJson
	 */
	producerId?: string | null;
	/**
	 * Unique identifier for the product
	 * @type {string}
	 * @memberof CreateProductJson
	 */
	sku?: string | null;
	/**
	 * Price for students
	 * @type {number}
	 * @memberof CreateProductJson
	 */
	studentPrice: number;
	/**
	 * Variants of the product, if applicable
	 * @type {string}
	 * @memberof CreateProductJson
	 */
	variants?: string | null;
	/**
	 * Volume of the product, if applicable
	 * @type {number}
	 * @memberof CreateProductJson
	 */
	volume?: number | null;
}

/**
 * Check if a given object implements the CreateProductJson interface.
 */
export function instanceOfCreateProductJson(value: object): value is CreateProductJson {
	if (!('internalPrice' in value) || value['internalPrice'] === undefined) return false;
	if (!('isSoldOut' in value) || value['isSoldOut'] === undefined) return false;
	if (!('name' in value) || value['name'] === undefined) return false;
	if (!('ordinaryPrice' in value) || value['ordinaryPrice'] === undefined) return false;
	if (!('studentPrice' in value) || value['studentPrice'] === undefined) return false;
	return true;
}

export function CreateProductJsonFromJSON(json: any): CreateProductJson {
	return CreateProductJsonFromJSONTyped(json, false);
}

export function CreateProductJsonFromJSONTyped(
	json: any,
	ignoreDiscriminator: boolean
): CreateProductJson {
	if (json == null) {
		return json;
	}
	return {
		alcoholContent: json['alcohol_content'] == null ? undefined : json['alcohol_content'],
		credits: json['credits'] == null ? undefined : json['credits'],
		description: json['description'] == null ? undefined : json['description'],
		imageId: json['image_id'] == null ? undefined : json['image_id'],
		internalPrice: json['internal_price'],
		isSoldOut: json['is_sold_out'],
		name: json['name'],
		ordinaryPrice: json['ordinary_price'],
		producerId: json['producer_id'] == null ? undefined : json['producer_id'],
		sku: json['sku'] == null ? undefined : json['sku'],
		studentPrice: json['student_price'],
		variants: json['variants'] == null ? undefined : json['variants'],
		volume: json['volume'] == null ? undefined : json['volume']
	};
}

export function CreateProductJsonToJSON(json: any): CreateProductJson {
	return CreateProductJsonToJSONTyped(json, false);
}

export function CreateProductJsonToJSONTyped(
	value?: CreateProductJson | null,
	ignoreDiscriminator: boolean = false
): any {
	if (value == null) {
		return value;
	}

	return {
		alcohol_content: value['alcoholContent'],
		credits: value['credits'],
		description: value['description'],
		image_id: value['imageId'],
		internal_price: value['internalPrice'],
		is_sold_out: value['isSoldOut'],
		name: value['name'],
		ordinary_price: value['ordinaryPrice'],
		producer_id: value['producerId'],
		sku: value['sku'],
		student_price: value['studentPrice'],
		variants: value['variants'],
		volume: value['volume']
	};
}
