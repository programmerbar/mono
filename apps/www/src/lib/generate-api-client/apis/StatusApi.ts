/* tslint:disable */
/* eslint-disable */
/**
 * api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { StatusRequest, StatusResponse } from '../models/index';
import {
	StatusRequestFromJSON,
	StatusRequestToJSON,
	StatusResponseFromJSON,
	StatusResponseToJSON
} from '../models/index';

export interface SetStatusRequest {
	statusRequest: StatusRequest;
}

/**
 *
 */
export class StatusApi extends runtime.BaseAPI {
	/**
	 * Get the current status of the bar to see if it is open or closed.
	 */
	async getStatusRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction
	): Promise<runtime.ApiResponse<StatusResponse>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		let urlPath = `/status`;

		const response = await this.request(
			{
				path: urlPath,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters
			},
			initOverrides
		);

		return new runtime.JSONApiResponse(response, (jsonValue) => StatusResponseFromJSON(jsonValue));
	}

	/**
	 * Get the current status of the bar to see if it is open or closed.
	 */
	async getStatus(
		initOverrides?: RequestInit | runtime.InitOverrideFunction
	): Promise<StatusResponse> {
		const response = await this.getStatusRaw(initOverrides);
		return await response.value();
	}

	/**
	 * Set the status of the bar to open, closed or private.
	 */
	async setStatusRaw(
		requestParameters: SetStatusRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction
	): Promise<runtime.ApiResponse<StatusResponse>> {
		if (requestParameters['statusRequest'] == null) {
			throw new runtime.RequiredError(
				'statusRequest',
				'Required parameter "statusRequest" was null or undefined when calling setStatus().'
			);
		}

		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		headerParameters['Content-Type'] = 'application/json';

		let urlPath = `/status`;

		const response = await this.request(
			{
				path: urlPath,
				method: 'POST',
				headers: headerParameters,
				query: queryParameters,
				body: StatusRequestToJSON(requestParameters['statusRequest'])
			},
			initOverrides
		);

		return new runtime.JSONApiResponse(response, (jsonValue) => StatusResponseFromJSON(jsonValue));
	}

	/**
	 * Set the status of the bar to open, closed or private.
	 */
	async setStatus(
		requestParameters: SetStatusRequest,
		initOverrides?: RequestInit | runtime.InitOverrideFunction
	): Promise<StatusResponse> {
		const response = await this.setStatusRaw(requestParameters, initOverrides);
		return await response.value();
	}
}
